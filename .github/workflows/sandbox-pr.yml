name: Create PR from Sandbox

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create PR from'
        required: true
        default: 'dev-agent/feature'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (current repository)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Create PR to main repo
        uses: actions/github-script@v7
        env:
          MAIN_REPO: ${{ vars.MAIN_REPO }}
          BRANCH: ${{ inputs.branch }}
        with:
          script: |
            const branch = process.env.BRANCH;
            const title = `ðŸ¤– Dev Agent: ${branch.replace('dev-agent/', '')}`;
            const body = `## Automated PR from Development Agent
            
            **Branch:** \`${branch}\`
            **Agent:** Development Agent (Sandbox Mode)
            **Generated:** ${new Date().toISOString()}
            
            ### Changes
            This PR contains automated changes generated by the Development Agent based on retrospective insights.
            
            ### Review Checklist
            - [ ] Code quality looks good
            - [ ] Tests pass
            - [ ] No breaking changes
            - [ ] Documentation updated if needed
            
            ---
            *This PR was automatically created by the ContextPilot Development Agent.*`;

            const [owner, repo] = (process.env.MAIN_REPO && process.env.MAIN_REPO.includes('/')
              ? process.env.MAIN_REPO
              : `${context.repo.owner}/${context.repo.repo}`
            ).split('/');

            const head = `${context.repo.owner}:${branch}`;

            const { data: pr } = await github.rest.pulls.create({
              owner,
              repo,
              title: title,
              head,
              base: 'main',
              body: body,
              draft: false
            });

            console.log(`âœ… Created PR #${pr.number}: ${pr.html_url}`);
            
            // Add labels
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: pr.number,
              labels: ['dev-agent', 'automated']
            });
